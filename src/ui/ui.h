// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.4.2
// LVGL version: 8.3.11
// Project name: sushka_prj

#ifndef _SUSHKA_PRJ_UI_H
#define _SUSHKA_PRJ_UI_H

#ifdef __cplusplus
extern "C" {
#endif

#include "lvgl.h"

#include "ui_helpers.h"
#include "ui_events.h"
#include "ui_theme_manager.h"
#include "ui_themes.h"

// SCREEN: ui_Screen1
void ui_Screen1_screen_init(void);
extern lv_obj_t * ui_Screen1;
extern lv_obj_t * ui_mainscreen;
extern lv_obj_t * ui_temeratureindicator;
void ui_event_temperature(lv_event_t * e);
extern lv_obj_t * ui_temperature;
extern lv_obj_t * ui_targettemp;
extern lv_obj_t * ui_timeft;
void ui_event_onoffarea(lv_event_t * e);
extern lv_obj_t * ui_onoffarea;
extern lv_obj_t * ui_mintemp;
extern lv_obj_t * ui_maxtemp;
extern lv_obj_t * ui_online;
void ui_event_minus60(lv_event_t * e);
extern lv_obj_t * ui_minus60;
extern lv_obj_t * ui_Label1;
void ui_event_minus30m(lv_event_t * e);
extern lv_obj_t * ui_minus30m;
extern lv_obj_t * ui_Label2;
void ui_event_plus1h(lv_event_t * e);
extern lv_obj_t * ui_plus1h;
extern lv_obj_t * ui_Label3;
void ui_event_plus30m(lv_event_t * e);
extern lv_obj_t * ui_plus30m;
extern lv_obj_t * ui_Label4;
extern lv_obj_t * ui_fanpanel;
extern lv_obj_t * ui_Label7;
extern lv_obj_t * ui_fanspeed;
void ui_event_setfanspeed(lv_event_t * e);
extern lv_obj_t * ui_setfanspeed;
extern lv_obj_t * ui_sensor;
extern lv_obj_t * ui_crrettemp;
void ui_event_Button3(lv_event_t * e);
extern lv_obj_t * ui_Button3;
extern lv_obj_t * ui_Label18;
extern lv_obj_t * ui_status;
extern lv_obj_t * ui_errormodal;
void ui_event_Button1(lv_event_t * e);
extern lv_obj_t * ui_Button1;
extern lv_obj_t * ui_errortext;
extern lv_obj_t * ui_Label6;
extern lv_obj_t * ui_Label24;
// SCREEN: ui_config
void ui_config_screen_init(void);
extern lv_obj_t * ui_config;
extern lv_obj_t * ui_Container3;
extern lv_obj_t * ui_maxmenutemp;
extern lv_obj_t * ui_Label5;
extern lv_obj_t * ui_maxcelsius;
extern lv_obj_t * ui_minmenutemp;
extern lv_obj_t * ui_Label8;
extern lv_obj_t * ui_mincelsius;
extern lv_obj_t * ui_Label9;
extern lv_obj_t * ui_fan;
extern lv_obj_t * ui_Label17;
extern lv_obj_t * ui_fanstart;
extern lv_obj_t * ui_minmenutemp2;
extern lv_obj_t * ui_Label19;
extern lv_obj_t * ui_tgtcelsius;
extern lv_obj_t * ui_pids;
void ui_event_pid_ki(lv_event_t * e);
extern lv_obj_t * ui_pid_ki;
void ui_event_pid_kp(lv_event_t * e);
extern lv_obj_t * ui_pid_kp;
void ui_event_pid_kd(lv_event_t * e);
extern lv_obj_t * ui_pid_kd;
extern lv_obj_t * ui_Label11;
extern lv_obj_t * ui_Label12;
extern lv_obj_t * ui_Label13;
extern lv_obj_t * ui_ku_Container1;
extern lv_obj_t * ui_Label20;
extern lv_obj_t * ui_ku_value;
extern lv_obj_t * ui_tu_Container2;
extern lv_obj_t * ui_Label21;
extern lv_obj_t * ui_tu_value;
void ui_event_pidselect(lv_event_t * e);
extern lv_obj_t * ui_pidselect;
void ui_event_reset_pid_button(lv_event_t * e);
extern lv_obj_t * ui_reset_pid_button;
extern lv_obj_t * ui_Label14;
void ui_event_return(lv_event_t * e);
extern lv_obj_t * ui_return;
extern lv_obj_t * ui_Label15;
void ui_event_reset_pid(lv_event_t * e);
extern lv_obj_t * ui_reset_pid;
extern lv_obj_t * ui_Label16;
extern lv_obj_t * ui_Container5;
void ui_event_R25_Ohm(lv_event_t * e);
extern lv_obj_t * ui_R25_Ohm;
void ui_event_R_div_Ohm(lv_event_t * e);
extern lv_obj_t * ui_R_div_Ohm;
void ui_event_beta(lv_event_t * e);
extern lv_obj_t * ui_beta;
extern lv_obj_t * ui_Label10;
extern lv_obj_t * ui_Label22;
extern lv_obj_t * ui_Label23;
void ui_event_Keyboard1(lv_event_t * e);
extern lv_obj_t * ui_Keyboard1;
extern lv_obj_t * ui_version;
extern lv_obj_t * ui____initial_actions0;





void ui_init(void);

#ifdef __cplusplus
} /*extern "C"*/
#endif

#endif
